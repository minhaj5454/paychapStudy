# name: Deploy to AWS

# on:
#   push:
#     branches: [main]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - uses: actions/setup-node@v3
#       with:
#         node-version: 18
#     - run: npm install -g serverless@3.38.0
#     - run: npm install

#     - name: Set up AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: eu-north-1  # Replace with your region, minhaj changed this line 

#     - name: Set environment file
#       run: |
#         if [ "${{ github.ref }}" == "refs/heads/dev" ]; then
#           echo "${{ secrets.STAGING_ENV }}" > .env
#           echo "STAGE=staging" >> $GITHUB_ENV
#         elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
#           echo "${{ secrets.PRODUCTION_ENV }}" > .env
#           echo "STAGE=production" >> $GITHUB_ENV
#         fi

#     - run: npx prisma generate
#     - run: npx prisma migrate deploy

#     - name: Extract branch name
#       id: extract_branch
#       run: echo "branch_name=${GITHUB_REF##*/}" >> $GITHUB_ENV

#     #- name: Serverless Login
#      # run: echo "${{ secrets.SERVERLESS_TOKEN }}" | serverless login --token

#     #- run: serverless deploy --stage ${{ env.branch_name }} --verbose
#     #- name: Serverless deploy
#     #  run: serverless deploy --stage ${{ env.STAGE }} --verbose
#     - name: Serverless deploy
#       run: |
#         echo "Deploying to stage ${{ env.STAGE }}"
#         serverless deploy --stage ${{ env.STAGE }} --verbose


name: Deploy to AWS

on:
  push:
    branches:
      - minhajDev
      - junedDev
      - sandbox
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v3

    - name: 🛠 Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: 📦 Install dependencies
      run: |
        npm install -g serverless@3.38.0
        npm install

    - name: 🔐 Setup AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1

    - name: 🧪 Print github.ref
      run: echo "GITHUB_REF is $GITHUB_REF"

    - name: ⚙️ Set environment file
      run: |
        if [ "${{ github.ref }}" == "refs/heads/sandbox" ]; then
          echo "${{ secrets.STAGING_ENV }}" > .env
          echo "STAGE=staging" >> $GITHUB_ENV
        elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
          echo "${{ secrets.PRODUCTION_ENV }}" > .env
          echo "STAGE=production" >> $GITHUB_ENV
        else
          # You can either hardcode your dev DB URL:
          echo "DATABASE_URL=postgresql://username:password@host:5432/devdb" > .env
          echo "STAGE=dev" >> $GITHUB_ENV
          # OR (better): store DEV_ENV in secrets and do:
          # echo "${{ secrets.DEV_ENV }}" > .env
        fi
        echo "✅ Final .env content:"
        cat .env

    - name: 🔍 Check DATABASE_URL in .env
      run: grep DATABASE_URL .env

    - name: 📦 Check Prisma version
      run: npx prisma --version

    - name: ⚙️ Generate Prisma client
      run: npx prisma generate

    - name: 🛠 Run Prisma migrations
      run: npx prisma migrate deploy

    - name: 🏷 Extract branch name
      id: extract_branch
      run: echo "branch_name=${GITHUB_REF##*/}" >> $GITHUB_ENV

    - name: 🚀 Serverless deploy (only sandbox/main)
      if: github.ref == 'refs/heads/sandbox' || github.ref == 'refs/heads/main'
      run: |
        echo "Deploying to stage ${{ env.STAGE }}"
        serverless deploy --stage ${{ env.STAGE }} --verbose
